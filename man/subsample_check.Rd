% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subsample.R
\name{subsample_check}
\alias{subsample_check}
\title{Checks and updates the input from \code{subsample}}
\usage{
subsample_check(
  df,
  A_obs,
  func_obs,
  func_var,
  A_shp,
  beta_shp,
  A_tgt,
  beta_tgt,
  bs_seed,
  bs_num,
  p_sig,
  solver,
  cores,
  lnorm,
  phi,
  progress
)
}
\arguments{
\item{df}{The data being used in the inference.}

\item{A_obs}{The "observed matrix" in the inference \eqn{A_{\mathrm{obs}}}.}

\item{func_obs}{The function that generates the required 
\eqn{\hat{\beta}_{\mathrm{obs}}}.}

\item{func_var}{Function that generates the asymptotic variance 
matrix of the estimator \eqn{\hat{\beta}_{\mathrm{obs}}}.}

\item{A_tgt}{The "target matrix" in the inference \eqn{A_{\mathrm{tgt}}}.}

\item{beta_tgt}{The value of \eqn{\hat{\beta}_{\mathrm{tgt}}} (i.e. the 
value of \eqn{t} in the missing data problem) in the null hypothesis.}

\item{bs_seed}{The starting value of the seed in bootstrap.}

\item{bs_num}{The total number of bootstraps \eqn{B} to be conducted.}

\item{p_sig}{The number of decimal places in the \eqn{p}-value.}

\item{solver}{The name of the linear and quadratic programming solver that 
are used to obtain the solution to linear and quadratic programs. 
The solvers supported by this module are `\code{cplexAPI}', 
`\code{gurobi}', `\code{limSolve}' and `\code{Rcplex}'.}

\item{cores}{Number of cores to be used in the parallelized for-loop. 
Parallelized for-loop is used if \code{cores} is set to be an integer
greater than or equal to 2.}

\item{lnorm}{Norm used in the optimization problem.}

\item{phi}{Power for the sample. \eqn{n^\phi} represents the size
of each subsample.}

\item{progress}{The boolean variable for whether the result messages should
be displayed in the inference procedure. If it is set as \code{TRUE}, the 
messages are displayed throughout the procedure. Otherwise, the messages
will not be displayed.}
}
\value{
Returns the updated value of the parameters back to the function 
   \code{subsample}. 
  \item{df}{Upated data in class \code{data.frame}}
  \item{A_obs}{Updated "observed" matrix in the \code{matrix} class.}
  \item{beta_obs}{Obtain \eqn{\widehat{\bm{\beta}}_{\mathrm{obs}}} 
     that is obtained from the function \code{func_obs}.}
  \item{A_shp}{Updated matrix for shape constraints in the \code{matrix} 
    class.}
  \item{beta_shp}{Updated RHS vector for shape constraints in the 
    \code{matrix} class.}
  \item{A_tgt}{Updated "target" matrix in the \code{matrix} class.}
  \item{beta_tgt}{Updated "target" vector in the \code{matrix} class}
  \item{solver}{Name of the function that corresponds to the optimizer.}
  \item{solver_name}{Updated name of solver in lower case.}
  \item{cores}{Updated number of cores to be used in the parallelization
     of the for-loop in the bootstrap procedure.}
}
\description{
This function checks and updates the input of the user. If 
   there is any invalid input, this function will be terminated and 
   generates appropriate error messages. This function is mainly calling
   other functions in the \code{checks} files to conduct the checks and
   updates.
}
