% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fsst.R
\name{fsst.cone.lp}
\alias{fsst.cone.lp}
\title{Computes the solution to the cone problem}
\usage{
fsst.cone.lp(n, omega.i, beta.n, beta.star, lpmodel, indicator, solver)
}
\arguments{
\item{n}{The sample size. This is only required if \code{data} is omitted
in the input.}

\item{omega.i}{The matrix \eqn{\widehat{\bm{\Omega}}^i_n}, i.e. the
regularized matrix for
\eqn{\widehat{\bm{\Sigma}}^{\beta^\star}_{n,\bar{\rho}}}.}

\item{beta.n}{The sample \eqn{\widehat{\bm{\beta}}_n} vector that is defined
as \eqn{\widehat{\bm{\beta}}_n \equiv (\widehat{\bm{\beta}}_{{\rm obs},n},
\bm{\beta}_{{\rm shp},n}, \bm{\beta}_{{\rm tgt}})'}.}

\item{beta.star}{The starred version of the \code{beta.n} vector, i.e.
\eqn{\widehat{\bm{\beta}}^\star_n}.}

\item{lpmodel}{The \code{lpmodel} object.}

\item{indicator}{A binary variable that equals to 1 for \eqn{d \geq p} and
equals to 0 for \eqn{d < p}.}

\item{solver}{The name of the linear and quadratic programming solver that
is used to obtain the solution to linear and quadratic programs.
The solvers supported by this package are \code{cplexAPI}, \code{gurobi},
\code{limSolve} and \code{Rcplex}.}
}
\value{
Returns the optimal point and optimal value.
 \item{objval}{The optimal value.}
 \item{x}{The optimal point.}
}
\description{
This function computes the solution to the cone problem.
}
