% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dkqs.R
\name{dkqs.check}
\alias{dkqs.check}
\title{Checks and updates the input in \code{dkqs}}
\usage{
dkqs.check(data, lpmodel, beta.tgt, R, Rmulti, tau, n, solver, progress)
}
\arguments{
\item{data}{Data used in the tests.}

\item{lpmodel}{The \code{lpmodel} object used in the test. The following
components are required in the \code{lpmodel} for the DKQS test:
 \itemize{
   \item{\code{A.tgt}}
   \item{\code{A.obs}}
   \item{\code{beta.obs}}
 }}

\item{beta.tgt}{Value of beta to be tested.}

\item{R}{Number of bootstrap replications.}

\item{Rmulti}{Multiplier for the number of bootstrap replications. The
product of \code{Rmulti} and \code{R} refers to the maximum
number of bootstrap replications to be conducted if there are errors.}

\item{tau}{Value of the tuning parameter \eqn{\tau} in the DKQS
procedure.}

\item{n}{Sample size (only required if \code{data} is omitted in the input).}

\item{solver}{Name of the linear and quadratic programming solver that
are used to obtain the solution to linear and quadratic programs.
The solvers supported by this package are \code{cplexAPI}, \code{gurobi},
\code{limSolve} and \code{Rcplex}.}

\item{progress}{The boolean variable for whether the progress bars should
be displayed. If it is set as \code{TRUE}, the progress bars will be
displayed while the code is running.}
}
\value{
Returns the updated parameters back to the function
\code{dkqs}. The following information are updated:
   \itemize{
      \item{\code{data}}
      \item{\code{lpmodel}}
      \item{\code{solver}}``
      \item{\code{solver.name}}
      \item{\code{test.logical}}
   }
}
\description{
This function checks and updates the input of the user. If
   there is any invalid input, this function will be terminated and
   generates appropriate error messages.
}
